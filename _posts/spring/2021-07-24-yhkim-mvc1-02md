---
layout: post
title: "영한킴: spring MVC (1) : 강의 노트"
subtitle: "..."
date: 2021-07-25 12:00:00 +0900
categories: backend
tags: spring
comments: true
---

> 이 포스트는 강의 내용에 관한 노트나 필자가 코딩한 것을 기록했습니다

---

#### MVC Version 1

- FrontController 패턴으로 전환
  - FrontController 생성
  - 매핑정보를 조회하기 위한 ControllMap 생성

아래처럼 코드를 구성해보았는데 잘 작동한다 !

```java
protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    System.out.println("FrontControllerServletV1.service");

    String requestURI = request.getRequestURI();

    ControllerV1 whichController =
        controllerMap
            .entrySet()
            .stream()
            .filter(entry -> entry.getKey().equals(requestURI))
            .findFirst()
            .orElseThrow(()-> new IllegalArgumentException("해당되는 URI가 없습니다"))
            .getValue();

    whichController.process(request, response);

  }
```

하지만 영한 킴님의 간결한 코드에.. 난 울어버렸다 ..

```java
  @Override
  protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    System.out.println("FrontControllerServletV1.service");

    String requestURI = request.getRequestURI();

    ControllerV1 controller = controllerMap.get(requestURI);
    if (controller == null) {
      response.setStatus(HttpServletResponse.SC_NOT_FOUND);
      return;
    }
    controller.process(request, response);
  }
```

#### MVC Version 2

- View 분리
  - MyView 생성
  - 이제 Controller에서 MyView를 반환한다
  - FrontController에서는 이것을 렌더링(JSP 호출)

내가 리펙터링 한 것

```java
protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    System.out.println("FrontControllerServletV1.service");

    String requestURI = request.getRequestURI();

    ControllerV1 controller = controllerMap.get(requestURI);
    if (controller == null) {
      response.setStatus(HttpServletResponse.SC_NOT_FOUND);
      return;
    }
    controller.process(request, response);

    String[] strings = requestURI.split("/");

    Arrays.stream(strings).iterator().forEachRemaining(s -> System.out.println("s = " + s));

    String lastURI = strings[strings.length - 1];
    System.out.println("lastURI = " + lastURI);
    if(lastURI.equals("save")) {
      lastURI = "save-result";
    }
    RequestDispatcher dispatcher = request.getRequestDispatcher("/WEB-INF/views/" + lastURI+".jsp");
    dispatcher.forward(request, response);
  }
```

아래는 영한킴님의 코드

```java
public interface ControllerV2 {

  MyView process(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException;

}
```

```java
  @Override
  protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

    String requestURI = request.getRequestURI();

    ControllerV2 controller = controllerMap.get(requestURI);
    if (controller == null) {
      response.setStatus(HttpServletResponse.SC_NOT_FOUND);
      return;
    }
    MyView view = controller.process(request, response);
    view.render(request, response);
  }
```

```java
public class MemberFormControllerV2 implements ControllerV2 {

  @Override
  public MyView process(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    return new MyView("/WEB-INF/views/new-form.jsp");
  }
}
// MemberServiceControllerV2, MemberListCOntrollerV2 등... 이하 동일
```

#### MVC Version 3

- Model 분리
  - Controller가 HttpServlet에서 완전히 독립할 수 있도록 인자로 전달되는 request, response 제거
- 이것을 위한 Model 클래스 생성 (`request.setAttribute` 를 대체하기 위함)
